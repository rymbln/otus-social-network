version: '3'
services:
  haproxy:
    image: haproxy
    container_name: haproxy
    ports:
      - 5432:5432
      - 1936:1936
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    restart: unless-stopped
  postgresql-master:
    image: 'bitnami/postgresql:latest'
    container_name: postgresql-master
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=dbuser
      - POSTGRESQL_PASSWORD=dbpassword
      - POSTGRESQL_DATABASE=otusdb
      - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
  postgresql-slave-1:
    image: 'bitnami/postgresql:latest'
    container_name: postgresql-slave-1
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PASSWORD=dbpassword
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
  postgresql-slave-2:
    image: 'bitnami/postgresql:latest'
    container_name: postgresql-slave-2
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PASSWORD=dbpassword
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
  postgresql-slave-3:
    image: 'bitnami/postgresql:latest'
    container_name: postgresql-slave-3
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PASSWORD=dbpassword
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
  otus-api-1:
    image: otus-api-image
    build:
      context: ./webapi
      dockerfile: ./Dockerfile.webapi
    container_name: otus-api-1
    restart: always
    environment:
      ServiceName: "Otus1"
      ASPNETCORE_URLS: "http://+:5000"
      AllowedHosts: "*"
      DatabaseSettings:ConnStr: "Host=haproxy;Port=5432;Username=dbuser;Password=dbpassword;Database=otusdb;Pooling=true;"
      JWTSettings:Key: "verystrongkeyforauthtoken"
      JWTSettings:Issuer: otus.social.network
      JWTSettings:Audience: otus.social.network
      JWTSettings:DurationInMinutes: "60"
    user: "555:555"
    ports:
      - 5001:5000
    entrypoint: dotnet OtusSocialNetwork.dll
    depends_on:
    - haproxy
    networks:
      - otus-network
  otus-api-2:
    image: otus-api-image
    build:
      context: ./webapi
      dockerfile: ./Dockerfile.webapi
    container_name: otus-api-2
    restart: always
    environment:
      ServiceName: "Otus2"
      ASPNETCORE_URLS: "http://+:5000"
      AllowedHosts: "*"
      DatabaseSettings:ConnStr: "Host=haproxy;Port=5432;Username=dbuser;Password=dbpassword;Database=otusdb;Pooling=true;"
      JWTSettings:Key: "verystrongkeyforauthtoken"
      JWTSettings:Issuer: otus.social.network
      JWTSettings:Audience: otus.social.network
      JWTSettings:DurationInMinutes: "60"
    user: "555:555"
    ports:
      - 5002:5000
    entrypoint: dotnet OtusSocialNetwork.dll
    depends_on:
    - haproxy
    networks:
      - otus-network
  otus-api-3:
    image: otus-api-image
    build:
      context: ./webapi
      dockerfile: ./Dockerfile.webapi
    container_name: otus-api-3
    restart: always
    environment:
      ServiceName: "Otus3"
      ASPNETCORE_URLS: "http://+:5000"
      AllowedHosts: "*"
      DatabaseSettings:ConnStr: "Host=haproxy;Port=5432;Username=dbuser;Password=dbpassword;Database=otusdb;Pooling=true;"
      JWTSettings:Key: "verystrongkeyforauthtoken"
      JWTSettings:Issuer: otus.social.network
      JWTSettings:Audience: otus.social.network
      JWTSettings:DurationInMinutes: "60"
    user: "555:555"
    ports:
      - 5003:5000
    entrypoint: dotnet OtusSocialNetwork.dll
    depends_on:
    - haproxy
    networks:
      - otus-network
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - 5000:5000
    depends_on:
    - otus-api-1
    networks:
    - otus-network

networks:
  otus-network:
    name: otus-network
    driver: bridge
volumes:
  postgresql_master_data: