version: "3.9"

services:
  otus-rabbit:
    container_name: "otus-rabbit"
    image: rabbitmq:management
    hostname: "otus-rabbit"
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - otus-network

  otus-tarantool:
    image: tarantool/tarantool:2.11
    # build:
    #   context: ./tarantool
    #   dockerfile: ./Dockerfile
    container_name: otus-tarantool
    restart: unless-stopped
    environment:
      TARANTOOL_USER_NAME: "user"
      TARANTOOL_USER_PASSWORD: "password"
    ports:
      - 3301:3301
    volumes:
      - ./volumes/tarantool/data:/var/lib/tarantool
      - ./tarantool:/usr/local/share/tarantool/init
    command: tarantool /usr/local/share/tarantool/init/init.lua
    networks:
      - otus-network

  otus-db:
    image: postgres:14
    # build:
    #   context: ./postgres
    #   dockerfile: ./Dockerfile
    container_name: otus-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "otusdb"
      POSTGRES_USER: "dbuser"
      POSTGRES_PASSWORD: "dbpassword"
    mem_limit: 512m
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d # Инициализация таблиц
      - ./volumes/Database/data:/var/lib/postgresql/data # Папка, где postgres будет хранить данные
      - ./volumes/Database/backups:/backups # Папка для бекапов
    networks:
      - otus-network

  otus-api:
    image: otus-api-image
    build:
      context: ./webapi
      dockerfile: ./Dockerfile
    container_name: otus-api
    restart: always
    environment:
      # Основные настройки для работы API
      ASPNETCORE_URLS: "http://+:5000"
      AllowedHosts: "*" # Ограничивает хосты, которые могут подключаться к API. По умолчанию - все
      # Строка подключения к базе данных Postgres
      DatabaseSettings:ConnStr: "Host=otus-db;Port=5432;Username=dbuser;Password=dbpassword;Database=otusdb;Pooling=true;"
      # Подключение к tarantool
      TarantoolSettings:ConnStr: "operator:123123@otus-tarantool:3301"
      TarantoolSettings:Space: "posts"
      # Rabbit
      RabbitEndpoint: "otus-rabbit"
      # Настройки генерации токена авторизации
      JWTSettings:Key: "verystrongkeyforauthtoken"
      JWTSettings:Issuer: otus.social.network
      JWTSettings:Audience: otus.social.network
      JWTSettings:DurationInMinutes: "60"
    user: "555:555"
    ports:
      - 5000:5000
      - 5001:5001
    mem_limit: 1024m
    entrypoint: dotnet OtusSocialNetwork.dll
    depends_on:
      - otus-db
      - otus-tarantool
      - otus-rabbit
    networks:
      - otus-network

  otus-web:
    image: otus-web-image
    container_name: otus-web
    build:
      context: ./angular
      dockerfile: ./Dockerfile
    restart: always
    mem_limit: 256m
    ports:
      - 4200:80
    depends_on:
      - otus-api
    networks:
      - otus-network

networks:
  otus-network:
    driver: bridge

